import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.17.3'
}

ext.kotlin_version = '1.3.70'
group 'me.sohamgovande.cardr'
version '1.2.1'

repositories {
    mavenCentral()
}

task exportToRelease {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        copy {
            from 'build/libs/Cardr-' + version + '.jar'
            into "C:\\Users\\vgsoh\\Cardr"
        }
    }
}

idea {
    module { inheritOutputDirs = true }
}

jar {
    manifest { attributes 'Main-Class': mainClassName, 'Add-Exports': 'javafx.graphics/com.sun.javafx.tk' }
}

javafx {
    modules = [ 'javafx.controls', 'javafx.base', 'javafx.web', 'javafx.fxml' ]
}

jlink {
    addExtraDependencies("javafx")
    //noinspection GroovyAssignabilityCheck, GrFinalVariableAccess, GroovyAccessibility
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'cardr'
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            jvmArgs = ['-Djava.library.path="dlls"']
        } else {
            jvmArgs = [
                    '--add-exports', 'javafx.graphics/com.sun.javafx.tk=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.javafx.tk.quantum=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.javafx.tk=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.glass.ui=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.glass.ui.mac=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.javafx.menu=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.controls/com.sun.javafx.scene.control=me.sohamgovande.cardr.merged.module',
            ]
        }
    }

    forceMerge 'commons-exec'
    forceMerge 'log4j-api'

    jpackageImage.doLast {
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            def dllFolder = new File('build/jpackage/CardrLauncher/dlls')
            dllFolder.mkdirs()

            copy {
                from '..\\CardrWindowsCPP\\bin\\Release\\NativeDllInterface\\Win32'
                into "build/jpackage/cardr/dlls"
                include "*.dll"
            }
            copy {
                from '..\\CardrWindowsCPP\\bin\\Release\\NativeDllInterface\\x64'
                into "build/jpackage/cardr/dlls"
                include "*.dll"
            }
            copy {
                from 'C:\\program files\\java\\jre1.8.0_211\\lib\\security'
                into 'build/jpackage/cardr/runtime/lib/security'
                include "cacerts"
            }
        }
    }

    jpackage {
        jpackageHome = jpackageJDK14Home
        appVersion = version

        imageOptions = [
                '--icon', appWindowsICO
        ]

        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            jvmArgs = ['-Djava.library.path="dlls"']
        } else {
            jvmArgs = [
                    '--add-exports', 'javafx.graphics/com.sun.javafx.tk=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.javafx.tk.quantum=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.javafx.tk=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.glass.ui=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.glass.ui.mac=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.graphics/com.sun.javafx.menu=me.sohamgovande.cardr.merged.module',
                    '--add-opens', 'javafx.controls/com.sun.javafx.scene.control=me.sohamgovande.cardr.merged.module',
            ]
        }

        installerOptions = [
                '--type', 'msi',

                '--resource-dir', jpackageResourceDir,
                '--copyright', appCopyright,
                '--vendor', appCompany,
                '--description', appDescription,

                '--win-menu',
                '--win-menu-group', 'cardr',
                '--win-per-user-install',
                '--win-upgrade-uuid', windowsUpgradeUUID,
                '--win-shortcut',

                '--verbose'
        ]
    }
}

dependencies {
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'commons-io:commons-io:2.5'
    implementation 'net.lingala.zip4j:zip4j:2.3.0'
    implementation "de.codecentric.centerdevice:centerdevice-nsmenufx:2.1.7"

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}
